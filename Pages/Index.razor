@page "/"
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Grids 

<button @onclick="ExportToExcel">Export to Excel</button>
<button @onclick="ExportToCSV">Export to CSV</button>
<br />
<br />
<SfGantt ID="GanttContainer" @ref="Gantt" DataSource="@TaskCollection" Height="480px" Width="900px" AllowExcelExport="true">
    <GanttTaskFields Id="TaskId" Name="TaskName"
                     StartDate="StartDate" EndDate="EndDate"
                     Duration="Duration" Progress="Progress" ParentID="ParentId">
    </GanttTaskFields>
    <GanttColumns>
        <GanttColumn Field="TaskId" Width="100"></GanttColumn>
        <GanttColumn Field="TaskName" Width="250"></GanttColumn>
        <GanttColumn Field="StartDate"></GanttColumn>
        <GanttColumn Field="EndDate" Visible="false"></GanttColumn>
        <GanttColumn Field="Duration"></GanttColumn>
        <GanttColumn Field="Progress"></GanttColumn>
    </GanttColumns>
</SfGantt>

@code{

    public SfGantt<TaskData> Gantt;

    public List<TaskData> TaskCollection { get; set; }

    protected override void OnInitialized()
    {
        this.TaskCollection = GetTaskCollection();
    }

    public void ExportToExcel()
    {
        ExcelExportProperties exportProperties = new ExcelExportProperties();
        exportProperties.IncludeHiddenColumn = true;

        ExcelStyle headerStyle = new ExcelStyle()
        {
            FontName = "Segoe UI",
            FontColor = "#666666",
            FontSize = 14,
            Bold = true
        };
        ExcelStyle recordStyle = new ExcelStyle()
        {
            FontName = "Segoe UI",
            FontColor = "#666666",
            FontSize = 12
        };
        ExcelTheme theme = new ExcelTheme()
        {
            Header = headerStyle,
            Record = recordStyle
        };
        exportProperties.Theme = theme;
        exportProperties.FileName = "Gantt.xlsx";

        this.Gantt.ExportToExcelAsync(exportProperties);
    }

    public void ExportToCSV()
    {
        ExcelExportProperties exportProperties = new ExcelExportProperties()
        {
            IncludeHiddenColumn = true,
            FileName = "Gantt.csv"
        };
        this.Gantt.ExportToCsvAsync(exportProperties);
    }

    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public int? ParentId { get; set; }
    }

    public static List<TaskData> GetTaskCollection()
    {
        List<TaskData> Tasks = new List<TaskData>() {

        new TaskData() {
            TaskId = 1,
            TaskName = "Project initiation",
            StartDate = new DateTime(2019, 04, 02),
            EndDate = new DateTime(2019, 04, 21)
        },
        new TaskData() {
            TaskId = 2,
            TaskName = "Identify Site location",
            StartDate = new DateTime(2019, 04, 02),
            Duration = "0",
            Progress = 30,
            ParentId = 1
        },
        new TaskData() {
            TaskId = 3,
            TaskName = "Perform soil test",
            StartDate = new DateTime(2019, 04, 02),
            Duration = "4",
            Progress = 40,
            ParentId = 1
        },
        new TaskData() {
            TaskId = 4,
            TaskName = "Soil test approval",
            StartDate = new DateTime(2019, 04, 02),
            Duration = "0",
            Progress = 30,
            ParentId = 1
        },
        new TaskData() {
            TaskId = 5,
            TaskName = "Project estimation",
            StartDate = new DateTime(2019, 04, 02),
            EndDate = new DateTime(2019, 04, 21)
        },
        new TaskData() {
            TaskId = 6,
            TaskName = "Develop floor plan for estimation",
            StartDate = new DateTime(2019, 04, 04),
            Duration = "3",
            Progress = 30,
            ParentId = 5
        },
        new TaskData() {
            TaskId = 7,
            TaskName = "List materials",
            StartDate = new DateTime(2019, 04, 04),
            Duration = "3",
            Progress = 40,
            ParentId = 5
        },
        new TaskData() {
            TaskId = 8,
            TaskName = "Project Estimation approval",
            StartDate = new DateTime(2019, 04, 04),
            Duration = "0",
            Progress = 30,
            ParentId = 5
        }
    };
        return Tasks;
    }
}